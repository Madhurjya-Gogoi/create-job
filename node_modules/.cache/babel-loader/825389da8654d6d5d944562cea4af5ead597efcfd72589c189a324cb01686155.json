{"ast":null,"code":"var _jsxFileName = \"/Users/madhurjyagogoi/Documents/created_job/src/pages/job/JobListing.tsx\",\n  _s = $RefreshSig$();\n/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect, useState } from 'react';\nimport JobCard from './jobCard';\nimport { getAllJobs } from '../../services/apis';\nimport { useJobCreatedContext } from '../../hooks/useCreatedJob';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst JobListing = () => {\n  _s();\n  const [jobsList, setJobsList] = useState([]);\n  const history = useHistory();\n  const fetchAllJobs = async () => {\n    try {\n      const data = await getAllJobs();\n      if (data) {\n        setJobsList(data);\n      }\n    } catch (error) {\n      history.push('/error');\n    }\n  };\n\n  // custom hook\n  const {\n    isJobCreated,\n    setIsJobCreated\n  } = useJobCreatedContext();\n  useEffect(() => {\n    if (isJobCreated) {\n      fetchAllJobs();\n      setIsJobCreated(false);\n    }\n  }, [isJobCreated, setIsJobCreated]);\n  useEffect(() => {\n    fetchAllJobs();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"h-[100vh] bg-gray grid grid-cols-1 md:grid-cols-2 gap-8 px-5 md:px-10 py-12 pt-20 overflow-auto\",\n      children: jobsList && jobsList.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: jobsList.map((job, index) => {\n          return /*#__PURE__*/_jsxDEV(JobCard, {\n            data: job\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 22\n          }, this);\n        })\n      }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: \"Loading...\"\n      }, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(JobListing, \"TDEXxXgEkIr/eveswregCniYhF8=\", false, function () {\n  return [useHistory, useJobCreatedContext];\n});\n_c = JobListing;\nexport default JobListing;\nvar _c;\n$RefreshReg$(_c, \"JobListing\");","map":{"version":3,"names":["React","useEffect","useState","JobCard","getAllJobs","useJobCreatedContext","useHistory","jsxDEV","_jsxDEV","Fragment","_Fragment","JobListing","_s","jobsList","setJobsList","history","fetchAllJobs","data","error","push","isJobCreated","setIsJobCreated","children","className","length","map","job","index","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/madhurjyagogoi/Documents/created_job/src/pages/job/JobListing.tsx"],"sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect, useState } from 'react';\nimport JobCard from './jobCard';\nimport { getAllJobs } from '../../services/apis';\nimport { useJobCreatedContext } from '../../hooks/useCreatedJob';\nimport { useHistory } from 'react-router-dom';\n\nexport interface Jobs {\n  company_name: string;\n  experience_max: number;\n  experience_min: number;\n  id: string;\n  industry: string;\n  job_title: string;\n  location: string;\n  remote_type: string;\n  salary_max: number;\n  salary_min: number;\n  total_employee: number;\n  apply_type: string;\n}\n\nconst JobListing = () => {\n  const [jobsList, setJobsList] = useState<Jobs[]>([]);\n\n  const history = useHistory();\n\n  const fetchAllJobs = async () => {\n    try {\n      const data = await getAllJobs();\n      if (data) {\n        setJobsList(data);\n      }\n    } catch (error) {\n      history.push('/error');\n    }\n  };\n\n  // custom hook\n  const { isJobCreated, setIsJobCreated } = useJobCreatedContext();\n\n  useEffect(() => {\n    if (isJobCreated) {\n      fetchAllJobs();\n      setIsJobCreated(false);\n    }\n  }, [isJobCreated, setIsJobCreated]);\n\n  useEffect(() => {\n    fetchAllJobs();\n  }, []);\n\n  return (\n    <>\n      <div className=\"h-[100vh] bg-gray grid grid-cols-1 md:grid-cols-2 gap-8 px-5 md:px-10 py-12 pt-20 overflow-auto\">\n        {jobsList && jobsList.length > 0 ? (\n          <>\n            {jobsList.map((job: Jobs, index: number) => {\n              return <JobCard data={job} key={index} />;\n            })}\n          </>\n        ) : (\n          <>Loading...</>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default JobListing;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,OAAO,MAAM,WAAW;AAC/B,SAASC,UAAU,QAAQ,qBAAqB;AAChD,SAASC,oBAAoB,QAAQ,2BAA2B;AAChE,SAASC,UAAU,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAiB9C,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAS,EAAE,CAAC;EAEpD,MAAMa,OAAO,GAAGT,UAAU,CAAC,CAAC;EAE5B,MAAMU,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACF,MAAMC,IAAI,GAAG,MAAMb,UAAU,CAAC,CAAC;MAC/B,IAAIa,IAAI,EAAE;QACRH,WAAW,CAACG,IAAI,CAAC;MACnB;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdH,OAAO,CAACI,IAAI,CAAC,QAAQ,CAAC;IACxB;EACF,CAAC;;EAED;EACA,MAAM;IAAEC,YAAY;IAAEC;EAAgB,CAAC,GAAGhB,oBAAoB,CAAC,CAAC;EAEhEJ,SAAS,CAAC,MAAM;IACd,IAAImB,YAAY,EAAE;MAChBJ,YAAY,CAAC,CAAC;MACdK,eAAe,CAAC,KAAK,CAAC;IACxB;EACF,CAAC,EAAE,CAACD,YAAY,EAAEC,eAAe,CAAC,CAAC;EAEnCpB,SAAS,CAAC,MAAM;IACde,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACER,OAAA,CAAAE,SAAA;IAAAY,QAAA,eACEd,OAAA;MAAKe,SAAS,EAAC,iGAAiG;MAAAD,QAAA,EAC7GT,QAAQ,IAAIA,QAAQ,CAACW,MAAM,GAAG,CAAC,gBAC9BhB,OAAA,CAAAE,SAAA;QAAAY,QAAA,EACGT,QAAQ,CAACY,GAAG,CAAC,CAACC,GAAS,EAAEC,KAAa,KAAK;UAC1C,oBAAOnB,OAAA,CAACL,OAAO;YAACc,IAAI,EAAES;UAAI,GAAMC,KAAK;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC;QAC3C,CAAC;MAAC,gBACF,CAAC,gBAEHvB,OAAA,CAAAE,SAAA;QAAAY,QAAA,EAAE;MAAU,gBAAE;IACf;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC,gBACN,CAAC;AAEP,CAAC;AAACnB,EAAA,CA7CID,UAAU;EAAA,QAGEL,UAAU,EAcgBD,oBAAoB;AAAA;AAAA2B,EAAA,GAjB1DrB,UAAU;AA+ChB,eAAeA,UAAU;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}